//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimbraNtlink4.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Folios", Namespace="http://schemas.datacontract.org/2004/07/CertificadorWs.Business")]
    [System.SerializableAttribute()]
    public partial class Folios : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimbraNtlink4.ServiceReference1.Folios.R RespuestaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UUDIField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimbraNtlink4.ServiceReference1.Folios.R Respuesta {
            get {
                return this.RespuestaField;
            }
            set {
                if ((this.RespuestaField.Equals(value) != true)) {
                    this.RespuestaField = value;
                    this.RaisePropertyChanged("Respuesta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UUDI {
            get {
                return this.UUDIField;
            }
            set {
                if ((object.ReferenceEquals(this.UUDIField, value) != true)) {
                    this.UUDIField = value;
                    this.RaisePropertyChanged("UUDI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Folios.R", Namespace="http://schemas.datacontract.org/2004/07/CertificadorWs.Business")]
        public enum R : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Aceptacion = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Rechazo = 1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpresaNtLink", Namespace="http://schemas.datacontract.org/2004/07/CertificadorWs.Business")]
    [System.SerializableAttribute()]
    public partial class EmpresaNtLink : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CiudadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColoniaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaContratoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FoliosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RazonSocialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegimenFiscalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RfcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SucursalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimbresContratadosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsuariosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ciudad {
            get {
                return this.CiudadField;
            }
            set {
                if ((object.ReferenceEquals(this.CiudadField, value) != true)) {
                    this.CiudadField = value;
                    this.RaisePropertyChanged("Ciudad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Colonia {
            get {
                return this.ColoniaField;
            }
            set {
                if ((object.ReferenceEquals(this.ColoniaField, value) != true)) {
                    this.ColoniaField = value;
                    this.RaisePropertyChanged("Colonia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contacto {
            get {
                return this.ContactoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactoField, value) != true)) {
                    this.ContactoField = value;
                    this.RaisePropertyChanged("Contacto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cp {
            get {
                return this.CpField;
            }
            set {
                if ((object.ReferenceEquals(this.CpField, value) != true)) {
                    this.CpField = value;
                    this.RaisePropertyChanged("Cp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Curp {
            get {
                return this.CurpField;
            }
            set {
                if ((object.ReferenceEquals(this.CurpField, value) != true)) {
                    this.CurpField = value;
                    this.RaisePropertyChanged("Curp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direccion {
            get {
                return this.DireccionField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionField, value) != true)) {
                    this.DireccionField = value;
                    this.RaisePropertyChanged("Direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((object.ReferenceEquals(this.EstadoField, value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaContrato {
            get {
                return this.FechaContratoField;
            }
            set {
                if ((this.FechaContratoField.Equals(value) != true)) {
                    this.FechaContratoField = value;
                    this.RaisePropertyChanged("FechaContrato");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Folios {
            get {
                return this.FoliosField;
            }
            set {
                if ((this.FoliosField.Equals(value) != true)) {
                    this.FoliosField = value;
                    this.RaisePropertyChanged("Folios");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RazonSocial {
            get {
                return this.RazonSocialField;
            }
            set {
                if ((object.ReferenceEquals(this.RazonSocialField, value) != true)) {
                    this.RazonSocialField = value;
                    this.RaisePropertyChanged("RazonSocial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegimenFiscal {
            get {
                return this.RegimenFiscalField;
            }
            set {
                if ((object.ReferenceEquals(this.RegimenFiscalField, value) != true)) {
                    this.RegimenFiscalField = value;
                    this.RaisePropertyChanged("RegimenFiscal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rfc {
            get {
                return this.RfcField;
            }
            set {
                if ((object.ReferenceEquals(this.RfcField, value) != true)) {
                    this.RfcField = value;
                    this.RaisePropertyChanged("Rfc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sucursales {
            get {
                return this.SucursalesField;
            }
            set {
                if ((this.SucursalesField.Equals(value) != true)) {
                    this.SucursalesField = value;
                    this.RaisePropertyChanged("Sucursales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonoField, value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimbresContratados {
            get {
                return this.TimbresContratadosField;
            }
            set {
                if ((this.TimbresContratadosField.Equals(value) != true)) {
                    this.TimbresContratadosField = value;
                    this.RaisePropertyChanged("TimbresContratados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Usuarios {
            get {
                return this.UsuariosField;
            }
            set {
                if ((this.UsuariosField.Equals(value) != true)) {
                    this.UsuariosField = value;
                    this.RaisePropertyChanged("Usuarios");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClienteNtLink", Namespace="http://schemas.datacontract.org/2004/07/CertificadorWs.Business")]
    [System.SerializableAttribute()]
    public partial class ClienteNtLink : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CiudadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColoniaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmpresasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaContratoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RazonSocialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegimenFiscalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RfcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SucursalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimbresConsumidosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimbresContratadosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsuariosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ciudad {
            get {
                return this.CiudadField;
            }
            set {
                if ((object.ReferenceEquals(this.CiudadField, value) != true)) {
                    this.CiudadField = value;
                    this.RaisePropertyChanged("Ciudad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Colonia {
            get {
                return this.ColoniaField;
            }
            set {
                if ((object.ReferenceEquals(this.ColoniaField, value) != true)) {
                    this.ColoniaField = value;
                    this.RaisePropertyChanged("Colonia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contacto {
            get {
                return this.ContactoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactoField, value) != true)) {
                    this.ContactoField = value;
                    this.RaisePropertyChanged("Contacto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cp {
            get {
                return this.CpField;
            }
            set {
                if ((object.ReferenceEquals(this.CpField, value) != true)) {
                    this.CpField = value;
                    this.RaisePropertyChanged("Cp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direccion {
            get {
                return this.DireccionField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionField, value) != true)) {
                    this.DireccionField = value;
                    this.RaisePropertyChanged("Direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Empresas {
            get {
                return this.EmpresasField;
            }
            set {
                if ((this.EmpresasField.Equals(value) != true)) {
                    this.EmpresasField = value;
                    this.RaisePropertyChanged("Empresas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((object.ReferenceEquals(this.EstadoField, value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaContrato {
            get {
                return this.FechaContratoField;
            }
            set {
                if ((this.FechaContratoField.Equals(value) != true)) {
                    this.FechaContratoField = value;
                    this.RaisePropertyChanged("FechaContrato");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RazonSocial {
            get {
                return this.RazonSocialField;
            }
            set {
                if ((object.ReferenceEquals(this.RazonSocialField, value) != true)) {
                    this.RazonSocialField = value;
                    this.RaisePropertyChanged("RazonSocial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegimenFiscal {
            get {
                return this.RegimenFiscalField;
            }
            set {
                if ((object.ReferenceEquals(this.RegimenFiscalField, value) != true)) {
                    this.RegimenFiscalField = value;
                    this.RaisePropertyChanged("RegimenFiscal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rfc {
            get {
                return this.RfcField;
            }
            set {
                if ((object.ReferenceEquals(this.RfcField, value) != true)) {
                    this.RfcField = value;
                    this.RaisePropertyChanged("Rfc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sucursales {
            get {
                return this.SucursalesField;
            }
            set {
                if ((this.SucursalesField.Equals(value) != true)) {
                    this.SucursalesField = value;
                    this.RaisePropertyChanged("Sucursales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonoField, value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimbresConsumidos {
            get {
                return this.TimbresConsumidosField;
            }
            set {
                if ((this.TimbresConsumidosField.Equals(value) != true)) {
                    this.TimbresConsumidosField = value;
                    this.RaisePropertyChanged("TimbresConsumidos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimbresContratados {
            get {
                return this.TimbresContratadosField;
            }
            set {
                if ((this.TimbresContratadosField.Equals(value) != true)) {
                    this.TimbresContratadosField = value;
                    this.RaisePropertyChanged("TimbresContratados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Usuarios {
            get {
                return this.UsuariosField;
            }
            set {
                if ((this.UsuariosField.Equals(value) != true)) {
                    this.UsuariosField = value;
                    this.RaisePropertyChanged("Usuarios");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimbradoResponse", Namespace="http://schemas.datacontract.org/2004/07/CertificadorWs")]
    [System.SerializableAttribute()]
    public partial class TimbradoResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadenaTimbreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CfdiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QrCodeBase64Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadenaTimbre {
            get {
                return this.CadenaTimbreField;
            }
            set {
                if ((object.ReferenceEquals(this.CadenaTimbreField, value) != true)) {
                    this.CadenaTimbreField = value;
                    this.RaisePropertyChanged("CadenaTimbre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cfdi {
            get {
                return this.CfdiField;
            }
            set {
                if ((object.ReferenceEquals(this.CfdiField, value) != true)) {
                    this.CfdiField = value;
                    this.RaisePropertyChanged("Cfdi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescripcionError {
            get {
                return this.DescripcionErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionErrorField, value) != true)) {
                    this.DescripcionErrorField = value;
                    this.RaisePropertyChanged("DescripcionError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QrCodeBase64 {
            get {
                return this.QrCodeBase64Field;
            }
            set {
                if ((object.ReferenceEquals(this.QrCodeBase64Field, value) != true)) {
                    this.QrCodeBase64Field = value;
                    this.RaisePropertyChanged("QrCodeBase64");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valido {
            get {
                return this.ValidoField;
            }
            set {
                if ((this.ValidoField.Equals(value) != true)) {
                    this.ValidoField = value;
                    this.RaisePropertyChanged("Valido");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RespuestaCancelacion", Namespace="http://schemas.datacontract.org/2004/07/CertificadorWs.Business")]
    [System.SerializableAttribute()]
    public partial class RespuestaCancelacion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcuseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MensajeErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimbraNtlink4.ServiceReference1.StatusUuid[] StatusUuidsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Acuse {
            get {
                return this.AcuseField;
            }
            set {
                if ((object.ReferenceEquals(this.AcuseField, value) != true)) {
                    this.AcuseField = value;
                    this.RaisePropertyChanged("Acuse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MensajeError {
            get {
                return this.MensajeErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.MensajeErrorField, value) != true)) {
                    this.MensajeErrorField = value;
                    this.RaisePropertyChanged("MensajeError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimbraNtlink4.ServiceReference1.StatusUuid[] StatusUuids {
            get {
                return this.StatusUuidsField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusUuidsField, value) != true)) {
                    this.StatusUuidsField = value;
                    this.RaisePropertyChanged("StatusUuids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusUuid", Namespace="http://schemas.datacontract.org/2004/07/CertificadorWs.Business")]
    [System.SerializableAttribute()]
    public partial class StatusUuid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uuid {
            get {
                return this.UuidField;
            }
            set {
                if ((object.ReferenceEquals(this.UuidField, value) != true)) {
                    this.UuidField = value;
                    this.RaisePropertyChanged("Uuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultadoConsulta", Namespace="http://schemas.datacontract.org/2004/07/CertificadorWs")]
    [System.SerializableAttribute()]
    public partial class ResultadoConsulta : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcuseCancelacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcuseEnvioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComprobanteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimbraNtlink4.ServiceReference1.StatusComprobante StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcuseCancelacion {
            get {
                return this.AcuseCancelacionField;
            }
            set {
                if ((object.ReferenceEquals(this.AcuseCancelacionField, value) != true)) {
                    this.AcuseCancelacionField = value;
                    this.RaisePropertyChanged("AcuseCancelacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcuseEnvio {
            get {
                return this.AcuseEnvioField;
            }
            set {
                if ((object.ReferenceEquals(this.AcuseEnvioField, value) != true)) {
                    this.AcuseEnvioField = value;
                    this.RaisePropertyChanged("AcuseEnvio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comprobante {
            get {
                return this.ComprobanteField;
            }
            set {
                if ((object.ReferenceEquals(this.ComprobanteField, value) != true)) {
                    this.ComprobanteField = value;
                    this.RaisePropertyChanged("Comprobante");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimbraNtlink4.ServiceReference1.StatusComprobante Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusComprobante", Namespace="http://schemas.datacontract.org/2004/07/CertificadorWs")]
    public enum StatusComprobante : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoEncontrado = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnProceso = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enviado = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelado = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://ntlink.com.mx/IServicioTimbrado", ConfigurationName="ServiceReference1.IServicioTimbrado")]
    public interface IServicioTimbrado {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaSaldo", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaSaldoResponse")]
        int ConsultaSaldo(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaSaldo", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaSaldoResponse")]
        System.Threading.Tasks.Task<int> ConsultaSaldoAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaAceptacionRecha" +
            "zo", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaAceptacionRecha" +
            "zoResponse")]
        string ConsultaAceptacionRechazo(string userName, string password, string rfcEmisor, string rfcReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaAceptacionRecha" +
            "zo", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaAceptacionRecha" +
            "zoResponse")]
        System.Threading.Tasks.Task<string> ConsultaAceptacionRechazoAsync(string userName, string password, string rfcEmisor, string rfcReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ProcesarRespuestaAcepta" +
            "cionRechazo", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ProcesarRespuestaAcepta" +
            "cionRechazoResponse")]
        string ProcesarRespuestaAceptacionRechazo(string userName, string password, TimbraNtlink4.ServiceReference1.Folios[] uuid, string rfcEmisor, string rfcReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ProcesarRespuestaAcepta" +
            "cionRechazo", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ProcesarRespuestaAcepta" +
            "cionRechazoResponse")]
        System.Threading.Tasks.Task<string> ProcesarRespuestaAceptacionRechazoAsync(string userName, string password, TimbraNtlink4.ServiceReference1.Folios[] uuid, string rfcEmisor, string rfcReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaEstatusCFDI", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaEstatusCFDIResp" +
            "onse")]
        string ConsultaEstatusCFDI(string userName, string password, string expresion);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaEstatusCFDI", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaEstatusCFDIResp" +
            "onse")]
        System.Threading.Tasks.Task<string> ConsultaEstatusCFDIAsync(string userName, string password, string expresion);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaCFDIRelacionado" +
            "s", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaCFDIRelacionado" +
            "sResponse")]
        string ConsultaCFDIRelacionados(string userName, string password, string uuid, string rfcEmisor, string rfcReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaCFDIRelacionado" +
            "s", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ConsultaCFDIRelacionado" +
            "sResponse")]
        System.Threading.Tasks.Task<string> ConsultaCFDIRelacionadosAsync(string userName, string password, string uuid, string rfcEmisor, string rfcReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/RegistraEmpresa", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/RegistraEmpresaResponse" +
            "")]
        void RegistraEmpresa(string userName, string password, TimbraNtlink4.ServiceReference1.EmpresaNtLink empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/RegistraEmpresa", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/RegistraEmpresaResponse" +
            "")]
        System.Threading.Tasks.Task RegistraEmpresaAsync(string userName, string password, TimbraNtlink4.ServiceReference1.EmpresaNtLink empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/BajaEmpresa", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/BajaEmpresaResponse")]
        void BajaEmpresa(string userName, string password, string rfcEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/BajaEmpresa", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/BajaEmpresaResponse")]
        System.Threading.Tasks.Task BajaEmpresaAsync(string userName, string password, string rfcEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerDatosCliente", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerDatosClienteResp" +
            "onse")]
        TimbraNtlink4.ServiceReference1.ClienteNtLink ObtenerDatosCliente(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerDatosCliente", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerDatosClienteResp" +
            "onse")]
        System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.ClienteNtLink> ObtenerDatosClienteAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerEmpresas", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerEmpresasResponse" +
            "")]
        TimbraNtlink4.ServiceReference1.EmpresaNtLink[] ObtenerEmpresas(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerEmpresas", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerEmpresasResponse" +
            "")]
        System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.EmpresaNtLink[]> ObtenerEmpresasAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiQr", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiQrResponse")]
        TimbraNtlink4.ServiceReference1.TimbradoResponse TimbraCfdiQr(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiQr", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiQrResponse")]
        System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.TimbradoResponse> TimbraCfdiQrAsync(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiQrSinSello", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiQrSinSelloRes" +
            "ponse")]
        TimbraNtlink4.ServiceReference1.TimbradoResponse TimbraCfdiQrSinSello(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiQrSinSello", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiQrSinSelloRes" +
            "ponse")]
        System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.TimbradoResponse> TimbraCfdiQrSinSelloAsync(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdi", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiResponse")]
        string TimbraCfdi(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdi", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiResponse")]
        System.Threading.Tasks.Task<string> TimbraCfdiAsync(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiSinSello", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiSinSelloRespo" +
            "nse")]
        string TimbraCfdiSinSello(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiSinSello", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraCfdiSinSelloRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> TimbraCfdiSinSelloAsync(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraRetencion", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraRetencionResponse" +
            "")]
        string TimbraRetencion(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraRetencion", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraRetencionResponse" +
            "")]
        System.Threading.Tasks.Task<string> TimbraRetencionAsync(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraRetencionSinSello" +
            "", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraRetencionSinSello" +
            "Response")]
        string TimbraRetencionSinSello(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraRetencionSinSello" +
            "", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraRetencionSinSello" +
            "Response")]
        System.Threading.Tasks.Task<string> TimbraRetencionSinSelloAsync(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraRetencionQr", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraRetencionQrRespon" +
            "se")]
        TimbraNtlink4.ServiceReference1.TimbradoResponse TimbraRetencionQr(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraRetencionQr", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/TimbraRetencionQrRespon" +
            "se")]
        System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.TimbradoResponse> TimbraRetencionQrAsync(string userName, string password, string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaRetencion", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaRetencionRespons" +
            "e")]
        string CancelaRetencion(string userName, string password, string uuid, string rfc, string motivo, string folioSustituto);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaRetencion", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaRetencionRespons" +
            "e")]
        System.Threading.Tasks.Task<string> CancelaRetencionAsync(string userName, string password, string uuid, string rfc, string motivo, string folioSustituto);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaCfdi", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaCfdiResponse")]
        string CancelaCfdi(string userName, string password, string uuid, string motivo, string folioSustituto, string rfc, string expresion, string rfcReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaCfdi", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaCfdiResponse")]
        System.Threading.Tasks.Task<string> CancelaCfdiAsync(string userName, string password, string uuid, string motivo, string folioSustituto, string rfc, string expresion, string rfcReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaCfdiOtrosPACs", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaCfdiOtrosPACsRes" +
            "ponse")]
        string CancelaCfdiOtrosPACs(string uuid, string motivo, string folioSustituto, string rfcEmisor, string expresion, string rfcReceptor, string Base64Cer, string Base64Key, string PasswordKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaCfdiOtrosPACs", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaCfdiOtrosPACsRes" +
            "ponse")]
        System.Threading.Tasks.Task<string> CancelaCfdiOtrosPACsAsync(string uuid, string motivo, string folioSustituto, string rfcEmisor, string expresion, string rfcReceptor, string Base64Cer, string Base64Key, string PasswordKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaCfdiRequest", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaCfdiRequestRespo" +
            "nse")]
        TimbraNtlink4.ServiceReference1.RespuestaCancelacion CancelaCfdiRequest(string userName, string password, string requestCancelacion, string expresion, string uuid, string rfcReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaCfdiRequest", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/CancelaCfdiRequestRespo" +
            "nse")]
        System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.RespuestaCancelacion> CancelaCfdiRequestAsync(string userName, string password, string requestCancelacion, string expresion, string uuid, string rfcReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerStatusUuid", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerStatusUuidRespon" +
            "se")]
        TimbraNtlink4.ServiceReference1.ResultadoConsulta ObtenerStatusUuid(string userName, string password, string uuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerStatusUuid", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerStatusUuidRespon" +
            "se")]
        System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.ResultadoConsulta> ObtenerStatusUuidAsync(string userName, string password, string uuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerStatusHash", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerStatusHashRespon" +
            "se")]
        TimbraNtlink4.ServiceReference1.ResultadoConsulta ObtenerStatusHash(string userName, string password, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerStatusHash", ReplyAction="https://ntlink.com.mx/IServicioTimbrado/IServicioTimbrado/ObtenerStatusHashRespon" +
            "se")]
        System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.ResultadoConsulta> ObtenerStatusHashAsync(string userName, string password, string hash);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioTimbradoChannel : TimbraNtlink4.ServiceReference1.IServicioTimbrado, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioTimbradoClient : System.ServiceModel.ClientBase<TimbraNtlink4.ServiceReference1.IServicioTimbrado>, TimbraNtlink4.ServiceReference1.IServicioTimbrado {
        
        public ServicioTimbradoClient() {
        }
        
        public ServicioTimbradoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioTimbradoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioTimbradoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioTimbradoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int ConsultaSaldo(string userName, string password) {
            return base.Channel.ConsultaSaldo(userName, password);
        }
        
        public System.Threading.Tasks.Task<int> ConsultaSaldoAsync(string userName, string password) {
            return base.Channel.ConsultaSaldoAsync(userName, password);
        }
        
        public string ConsultaAceptacionRechazo(string userName, string password, string rfcEmisor, string rfcReceptor) {
            return base.Channel.ConsultaAceptacionRechazo(userName, password, rfcEmisor, rfcReceptor);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaAceptacionRechazoAsync(string userName, string password, string rfcEmisor, string rfcReceptor) {
            return base.Channel.ConsultaAceptacionRechazoAsync(userName, password, rfcEmisor, rfcReceptor);
        }
        
        public string ProcesarRespuestaAceptacionRechazo(string userName, string password, TimbraNtlink4.ServiceReference1.Folios[] uuid, string rfcEmisor, string rfcReceptor) {
            return base.Channel.ProcesarRespuestaAceptacionRechazo(userName, password, uuid, rfcEmisor, rfcReceptor);
        }
        
        public System.Threading.Tasks.Task<string> ProcesarRespuestaAceptacionRechazoAsync(string userName, string password, TimbraNtlink4.ServiceReference1.Folios[] uuid, string rfcEmisor, string rfcReceptor) {
            return base.Channel.ProcesarRespuestaAceptacionRechazoAsync(userName, password, uuid, rfcEmisor, rfcReceptor);
        }
        
        public string ConsultaEstatusCFDI(string userName, string password, string expresion) {
            return base.Channel.ConsultaEstatusCFDI(userName, password, expresion);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaEstatusCFDIAsync(string userName, string password, string expresion) {
            return base.Channel.ConsultaEstatusCFDIAsync(userName, password, expresion);
        }
        
        public string ConsultaCFDIRelacionados(string userName, string password, string uuid, string rfcEmisor, string rfcReceptor) {
            return base.Channel.ConsultaCFDIRelacionados(userName, password, uuid, rfcEmisor, rfcReceptor);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaCFDIRelacionadosAsync(string userName, string password, string uuid, string rfcEmisor, string rfcReceptor) {
            return base.Channel.ConsultaCFDIRelacionadosAsync(userName, password, uuid, rfcEmisor, rfcReceptor);
        }
        
        public void RegistraEmpresa(string userName, string password, TimbraNtlink4.ServiceReference1.EmpresaNtLink empresa) {
            base.Channel.RegistraEmpresa(userName, password, empresa);
        }
        
        public System.Threading.Tasks.Task RegistraEmpresaAsync(string userName, string password, TimbraNtlink4.ServiceReference1.EmpresaNtLink empresa) {
            return base.Channel.RegistraEmpresaAsync(userName, password, empresa);
        }
        
        public void BajaEmpresa(string userName, string password, string rfcEmpresa) {
            base.Channel.BajaEmpresa(userName, password, rfcEmpresa);
        }
        
        public System.Threading.Tasks.Task BajaEmpresaAsync(string userName, string password, string rfcEmpresa) {
            return base.Channel.BajaEmpresaAsync(userName, password, rfcEmpresa);
        }
        
        public TimbraNtlink4.ServiceReference1.ClienteNtLink ObtenerDatosCliente(string userName, string password) {
            return base.Channel.ObtenerDatosCliente(userName, password);
        }
        
        public System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.ClienteNtLink> ObtenerDatosClienteAsync(string userName, string password) {
            return base.Channel.ObtenerDatosClienteAsync(userName, password);
        }
        
        public TimbraNtlink4.ServiceReference1.EmpresaNtLink[] ObtenerEmpresas(string userName, string password) {
            return base.Channel.ObtenerEmpresas(userName, password);
        }
        
        public System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.EmpresaNtLink[]> ObtenerEmpresasAsync(string userName, string password) {
            return base.Channel.ObtenerEmpresasAsync(userName, password);
        }
        
        public TimbraNtlink4.ServiceReference1.TimbradoResponse TimbraCfdiQr(string userName, string password, string comprobante) {
            return base.Channel.TimbraCfdiQr(userName, password, comprobante);
        }
        
        public System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.TimbradoResponse> TimbraCfdiQrAsync(string userName, string password, string comprobante) {
            return base.Channel.TimbraCfdiQrAsync(userName, password, comprobante);
        }
        
        public TimbraNtlink4.ServiceReference1.TimbradoResponse TimbraCfdiQrSinSello(string userName, string password, string comprobante) {
            return base.Channel.TimbraCfdiQrSinSello(userName, password, comprobante);
        }
        
        public System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.TimbradoResponse> TimbraCfdiQrSinSelloAsync(string userName, string password, string comprobante) {
            return base.Channel.TimbraCfdiQrSinSelloAsync(userName, password, comprobante);
        }
        
        public string TimbraCfdi(string userName, string password, string comprobante) {
            return base.Channel.TimbraCfdi(userName, password, comprobante);
        }
        
        public System.Threading.Tasks.Task<string> TimbraCfdiAsync(string userName, string password, string comprobante) {
            return base.Channel.TimbraCfdiAsync(userName, password, comprobante);
        }
        
        public string TimbraCfdiSinSello(string userName, string password, string comprobante) {
            return base.Channel.TimbraCfdiSinSello(userName, password, comprobante);
        }
        
        public System.Threading.Tasks.Task<string> TimbraCfdiSinSelloAsync(string userName, string password, string comprobante) {
            return base.Channel.TimbraCfdiSinSelloAsync(userName, password, comprobante);
        }
        
        public string TimbraRetencion(string userName, string password, string comprobante) {
            return base.Channel.TimbraRetencion(userName, password, comprobante);
        }
        
        public System.Threading.Tasks.Task<string> TimbraRetencionAsync(string userName, string password, string comprobante) {
            return base.Channel.TimbraRetencionAsync(userName, password, comprobante);
        }
        
        public string TimbraRetencionSinSello(string userName, string password, string comprobante) {
            return base.Channel.TimbraRetencionSinSello(userName, password, comprobante);
        }
        
        public System.Threading.Tasks.Task<string> TimbraRetencionSinSelloAsync(string userName, string password, string comprobante) {
            return base.Channel.TimbraRetencionSinSelloAsync(userName, password, comprobante);
        }
        
        public TimbraNtlink4.ServiceReference1.TimbradoResponse TimbraRetencionQr(string userName, string password, string comprobante) {
            return base.Channel.TimbraRetencionQr(userName, password, comprobante);
        }
        
        public System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.TimbradoResponse> TimbraRetencionQrAsync(string userName, string password, string comprobante) {
            return base.Channel.TimbraRetencionQrAsync(userName, password, comprobante);
        }
        
        public string CancelaRetencion(string userName, string password, string uuid, string rfc, string motivo, string folioSustituto) {
            return base.Channel.CancelaRetencion(userName, password, uuid, rfc, motivo, folioSustituto);
        }
        
        public System.Threading.Tasks.Task<string> CancelaRetencionAsync(string userName, string password, string uuid, string rfc, string motivo, string folioSustituto) {
            return base.Channel.CancelaRetencionAsync(userName, password, uuid, rfc, motivo, folioSustituto);
        }
        
        public string CancelaCfdi(string userName, string password, string uuid, string motivo, string folioSustituto, string rfc, string expresion, string rfcReceptor) {
            return base.Channel.CancelaCfdi(userName, password, uuid, motivo, folioSustituto, rfc, expresion, rfcReceptor);
        }
        
        public System.Threading.Tasks.Task<string> CancelaCfdiAsync(string userName, string password, string uuid, string motivo, string folioSustituto, string rfc, string expresion, string rfcReceptor) {
            return base.Channel.CancelaCfdiAsync(userName, password, uuid, motivo, folioSustituto, rfc, expresion, rfcReceptor);
        }
        
        public string CancelaCfdiOtrosPACs(string uuid, string motivo, string folioSustituto, string rfcEmisor, string expresion, string rfcReceptor, string Base64Cer, string Base64Key, string PasswordKey) {
            return base.Channel.CancelaCfdiOtrosPACs(uuid, motivo, folioSustituto, rfcEmisor, expresion, rfcReceptor, Base64Cer, Base64Key, PasswordKey);
        }
        
        public System.Threading.Tasks.Task<string> CancelaCfdiOtrosPACsAsync(string uuid, string motivo, string folioSustituto, string rfcEmisor, string expresion, string rfcReceptor, string Base64Cer, string Base64Key, string PasswordKey) {
            return base.Channel.CancelaCfdiOtrosPACsAsync(uuid, motivo, folioSustituto, rfcEmisor, expresion, rfcReceptor, Base64Cer, Base64Key, PasswordKey);
        }
        
        public TimbraNtlink4.ServiceReference1.RespuestaCancelacion CancelaCfdiRequest(string userName, string password, string requestCancelacion, string expresion, string uuid, string rfcReceptor) {
            return base.Channel.CancelaCfdiRequest(userName, password, requestCancelacion, expresion, uuid, rfcReceptor);
        }
        
        public System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.RespuestaCancelacion> CancelaCfdiRequestAsync(string userName, string password, string requestCancelacion, string expresion, string uuid, string rfcReceptor) {
            return base.Channel.CancelaCfdiRequestAsync(userName, password, requestCancelacion, expresion, uuid, rfcReceptor);
        }
        
        public TimbraNtlink4.ServiceReference1.ResultadoConsulta ObtenerStatusUuid(string userName, string password, string uuid) {
            return base.Channel.ObtenerStatusUuid(userName, password, uuid);
        }
        
        public System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.ResultadoConsulta> ObtenerStatusUuidAsync(string userName, string password, string uuid) {
            return base.Channel.ObtenerStatusUuidAsync(userName, password, uuid);
        }
        
        public TimbraNtlink4.ServiceReference1.ResultadoConsulta ObtenerStatusHash(string userName, string password, string hash) {
            return base.Channel.ObtenerStatusHash(userName, password, hash);
        }
        
        public System.Threading.Tasks.Task<TimbraNtlink4.ServiceReference1.ResultadoConsulta> ObtenerStatusHashAsync(string userName, string password, string hash) {
            return base.Channel.ObtenerStatusHashAsync(userName, password, hash);
        }
    }
}
